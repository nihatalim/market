// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using market.api.Context;

namespace market.api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191104231014_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("market.api.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentID");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Name");

                    b.HasIndex("ParentID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("market.api.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Name");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("market.api.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("market.api.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClientID");

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("DiscountRate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsConfirmed");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsConfirmed");

                    b.HasIndex("Type");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("market.api.Models.OrderProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("DiscountRate");

                    b.Property<int>("OrderID");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductID");

                    b.Property<decimal>("TaxRate");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("market.api.Models.Privilege", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Key");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.HasKey("ID");

                    b.HasIndex("Name");

                    b.HasIndex("Number");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("market.api.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Barcode");

                    b.Property<int?>("CategoryID");

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("TaxRate");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("ID");

                    b.HasIndex("Barcode");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Name");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("market.api.Models.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.Property<int>("ProductID");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.HasIndex("Name");

                    b.HasIndex("ProductID");

                    b.HasIndex("Type");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("market.api.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("Name");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("market.api.Models.RolePrivilege", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("PrivilegeID");

                    b.Property<int>("RoleID");

                    b.HasKey("ID");

                    b.HasIndex("PrivilegeID");

                    b.HasIndex("RoleID");

                    b.ToTable("RolePrivileges");
                });

            modelBuilder.Entity("market.api.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<DateTime?>("ExpirationDate");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.HasKey("ID");

                    b.HasIndex("Mail");

                    b.HasIndex("Name");

                    b.HasIndex("Token");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("market.api.Models.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyID");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("RoleID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("market.api.Models.Category", b =>
                {
                    b.HasOne("market.api.Models.Company", "Company")
                        .WithMany("Categories")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("market.api.Models.Category", "Parent")
                        .WithMany("Categories")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("market.api.Models.Client", b =>
                {
                    b.HasOne("market.api.Models.Company", "Company")
                        .WithMany("Clients")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.Order", b =>
                {
                    b.HasOne("market.api.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientID");

                    b.HasOne("market.api.Models.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.OrderProduct", b =>
                {
                    b.HasOne("market.api.Models.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("market.api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.Product", b =>
                {
                    b.HasOne("market.api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID");

                    b.HasOne("market.api.Models.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.Property", b =>
                {
                    b.HasOne("market.api.Models.Product", "Product")
                        .WithMany("Properties")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.Role", b =>
                {
                    b.HasOne("market.api.Models.Company", "Company")
                        .WithMany("Roles")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.RolePrivilege", b =>
                {
                    b.HasOne("market.api.Models.Privilege", "Privilege")
                        .WithMany()
                        .HasForeignKey("PrivilegeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("market.api.Models.Role", "Role")
                        .WithMany("Privileges")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("market.api.Models.UserRole", b =>
                {
                    b.HasOne("market.api.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("market.api.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("market.api.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
